<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzs7OYmJijo6Oj
        o6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6OioqKenp6VlZWU
        lJQAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIC+vr7c3Nzj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj
        4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Ph4eHX19e0tLSenp4AAAAAAAAAAAAAAAAAAAAAAACxsbG3
        t7fg4ODa2trX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX
        19fX19fb29vb29uoqKgAAAAAAAAAAAAAAAAAAAAAAACjo6PW1tbb29vZ2dnZ2dnd3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3/AADd3d3d3d3d3d3d3d3d3d3d3d3d3d3c3NzZ2dnZ2dnc3NzCwsLHx8cAAAAAAAAA
        AAAAAAAAAACmpqbc3Nza2tra2trZ2dnHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fH
        x8fHx8fHx8fHx8fNzc3b29va2trb29vJycnJyckAAAAAAAAAAAAAAAAAAAClpaXd3d3/AAAAAAD/AAAA
        AAD/AAAAAAD/AAAAAAD/AAAAAAD/AAAAAAD/AAAAAAD/AAAAAAD/AAAAAAD/AAAAAAD/AAAAAAD/AADJ
        ycnJyckAAAAAAAAAAAAAAAAAAAClpaXe3t7a2tra2trb29vX19fX19fX19fX19fX19fX19fX19fY2NjY
        2NjY2NjX19fX19fX19fX19fY2NjX19fY2Njb29va2tre3t7IyMjIyMgAAAAAAAAAAAAAAAAAAAClpaXf
        39/c3Nzc3Nzc3Nzf39/j4+Pk5OTk5OTk5OTk5OTh4eHe3t7e3t7e3t7h4eHk5OTk5OTh4eHe3t7e3t7d
        3d3c3Nzc3Nze3t7KysrIyMgAAAAAAAAAAAAAAAAAAAClpaXg4ODe3t7d3d3f39/c3NzJycnJycnJycnJ
        ycnIyMjZ2dnf39/c3Nzm5ubU1NTHx8fJycnW1tbl5eXd3d3d3d3d3d3d3d3f39/Ly8vHx8cAAAAAAAAA
        AAAAAAAAAAClpaXg4ODe3t7d3d3i4uLExMSDg4OKioqPj4+NjY2FhYWxsbHn5+ff39+4uLiUlJSHh4eK
        ioqWlpa/v7/j4+Pe3t7e3t7d3d3h4eHLy8vHx8cAAAAAAAAAAAAAAAAAAAClpaXi4uLf39/f39/i4uLT
        09Onp6empqaVlZWenp6mpqbLy8vp6enBwcGPj4+Xl5erq6uoqKiVlZWRkZHS0tLj4+Pf39/f39/i4uLN
        zc3Hx8cAAAAAAAAAAAAAAAAAAAClpaXj4+Pg4ODg4ODg4ODj4+Pv7+/b29uKioq2trbw8PDl5eXj4+O+
        vr6Xl5fQ0NDs7Ozu7u6xsbGKioq/v7/k5OTf39/g4ODi4uLNzc3Hx8cAAAAAAAAAAAAAAAAAAAClpaXl
        5eXh4eHg4ODg4ODg4ODj4+PT09OKioqysrLk5OTg4ODh4eHe3t7Z2dnm5ubn5+fz8/O6urqJiYnDw8Pm
        5ubg4ODg4ODj4+PNzc3Hx8cAAAAAAAAAAAAAAAAAAAClpaXl5eXi4uLh4eHh4eHh4eHl5eXT09OJiYmz
        s7Pm5ubh4eHh4eHi4uLl5eXh4eHNzc2xsbGWlpaVlZXd3d3k5OTh4eHh4eHl5eXPz8/Hx8cAAAAAAAAA
        AAAAAAAAAACkpKTn5+fk5OTk5OTk5OTk5OTn5+fU1NSJiYmzs7Po6Ojk5OTk5OTk5OTo6Ojc3NyhoaGP
        j4+amprd3d3r6+vj4+Pk5OTk5OTm5ubPz8/Hx8cAAAAAAAAAAAAAAAAAAACkpKTn5+fk5OTk5OTk5OTk
        5OTn5+fV1dWJiYmzs7Po6Ojk5OTk5OTn5+fb29vp6enl5eXNzc2YmJiwsLDp6enk5OTk5OTk5OTn5+fQ
        0NDGxsYAAAAAAAAAAAAAAAAAAACkpKTo6Ojl5eXk5OTk5OTl5eXu7u7b29uJiYmzs7Pq6urk5OTn5+fd
        3d2hoaHKysr6+vrs7Oyenp6YmJjg4ODn5+fk5OTk5OTo6OjQ0NDGxsYAAAAAAAAAAAAAAAAAAACkpKTp
        6enl5eXl5eXm5ubo6OjX19fExMSLi4uysrLr6+vl5eXq6urZ2dmTk5OVlZWrq6umpqaQkJCbm5vp6enn
        5+fl5eXl5eXp6enS0tLFxcUAAAAAAAAAAAAAAAAAAACkpKTq6uro6Ojo6Ojq6ure3t6WlpaKioqMjIy2
        trbr6+vo6Ojn5+fy8vLKysqYmJiPj4+Ojo6cnJzX19ft7e3n5+fo6Ojo6Ojq6urT09PFxcUAAAAAAAAA
        AAAAAAAAAACjo6Tr6+zn5+jm5ufm5ufp6erc3N3IyMnIyMnY2Nnp6erm5ufm5ufm5ufx8fLa2tvLy8zJ
        ycre3t/t7e7m5ufm5ufm5ufm5ufp6erS0tPFxcUAAAAAAAAAAAAAAAAAAACvrKH///T///D///D///D/
        //H///T///f///f///T///D///D///D///D//+////T///f///j///T///D///D///D///D///D///Tu
        69jKycMAAAAAAAAAAAAAAAAAAAB/irZGXcdLZsdLZsdLZsdLZsdLZcdLZcdLZcdLZcdLZsdLZsdLZsdL
        ZsdLZsdLZcdLZcdLZcdLZcdLZsdLZsdLZsdLZsdLZsdJY8hQZL69wtQAAAAAAAAAAAAAAAAAAABCYMoA
        FLoAIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0AIL0A
        IL0AIL0AIL0AHb0AH7uereIAAAAAAAAAAAAAAAAAAABGYsgAMMYLOccLOccLOccJOMcDNcoBNMsFNskK
        OccLOccLOccLOccLOccLOccLOccLOccJOMcDNcoBNMsFNskKOccLOccLOccHN8cGNMOerOAAAAAAAAAA
        AAAAAAAAAABFX8cGQc0RSM8RSM4PR9ANRtAtVr01W7khUcQNRtAQSM8RSM8RSM8RSM8RSM8RSM4OR9AQ
        SM0sVr42W7giUcMLRdEQSM8RSM8PSM8LP8meqt8AAAAAAAAAAAAAAAAAAABEXsYQVNcaW9cZWtgVV9hU
        d7jJxLfY0b6mqrM5aMUUWNkaWtcaWtcaWtcaWtcYWtgWWNdYebrDwLjb0r+nqrI3aMUTV9oaWtcXWtkR
        Ts+cp94AAAAAAAAAAAAAAAAAAABKYcMYZuIibeIfad8eZ9mlqKzr6OLj5OPh2cxvjLgZZuIhat8hat8h
        at8hat8eauEkaNShqbXn49zj4+Pl3NFyirETZOUhad4hb+UbW9agqdsAAAAAAAAAAAAAAAAAAABgbrQR
        Wt4ti/4keekldN+trazs6+rh4eLl3tN4lLofdOkneecneecneecoeeckeeorddqpsLnp5eHg4OHp4tt6
        kbAYc+0pfOkoiv8ZR8OutNQAAAAAAAAAAAAAAAAAAAAAAAAqR6ojfusnkvwmiOytrq/y8fDn6Ojo4Nh6
        nL0njvQxkfExkfExkfExkfEukfQyi+OrtLzt6ubm5+fs5t95l7Mbi/8olfkdZNdverkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAC8wNp6i9BJgNhIit+vsLH8+/ru7+/z6uJ6lrolfuUvguMvguIvguIvguIsgeUvfNWu
        tr749PHu7u/18OqDmLJFjetFcs6jqtjS1eYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADW1NPBv8y2tMao
        qKf////////z7Nx8ja0YVdMhWtEhWtEhWtEhWtEeV9QpXserra3//vj////k5OKioqfAvdDCwMri4Nrb
        2tcAAAAAAAAAAAAAAAD/////8AAAD+AAAA/AAAAPwAAAB8AAAAfFVVVHwAAAB8AAAAfAAAAHwAAAB8AA
        AAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AA
        AAfAAAAHwAAAB+AAAA/gAAAP8AAADw==
</value>
  </data>
</root>